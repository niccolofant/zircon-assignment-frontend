{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trackerCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trackers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addTracker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrackers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addTracker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrackers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trackerCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trackers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"project:/contracts/ExpenseTracker.sol\":{\"keccak256\":\"0xfba2b27c3a8a960739729140610392b27e0933766dd7321efa1c4db45b28914d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4864a8ce7e233506cb009631b33c91ef0f1d3ac90b9e895f76c5b1cf56c9f82f\",\"dweb:/ipfs/QmcykLGGPNuLph7cnN1ZomTWgtfuPdgPLvhhgcbYxUSLSh\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0x7c337548e060b2706bcaaf7fa6abfcdd1d5d1ce561d6f05ec2c0bd424db6f450\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2e1b1a93b1351ca0c83d9658b2ea4877f78ade8f9a6cc65ac3ed68576859ab\",\"dweb:/ipfs/QmduGbksHDpixBNkvxbx6nNRQPnspys8zvusRzB32Kt9RH\"]},\"project:/contracts/TOK.sol\":{\"keccak256\":\"0x86a68d1d55e7f4f73a7797a0d14b8759d44e2eb5923b0efc31deccb5df4bd070\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1aa6e6b4a73dd77d7d52602af8b05489b536293f8d725b1b576d5c04da3af4\",\"dweb:/ipfs/QmX7bWUk9kEEyUEZZcTwxd3VwgmANXVnTewZ9dKFktNrDi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051613a76380380613a7683398101604081905261002f9161015d565b610038336100f7565b60008161004d6000546001600160a01b031690565b60405161005990610150565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801561008c573d6000803e3d6000fd5b5060028054600180820183556000929092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790559091506100f090610147602090811b61035d17901c565b505061018d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80546001019055565b611a0b8061206b83390190565b60006020828403121561016f57600080fd5b81516001600160a01b038116811461018657600080fd5b9392505050565b611ecf8061019c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d4578063d57b803c146100e5578063f1362ffd146100fa578063f2fde38b1461010d57600080fd5b806316d6bca414610082578063715018a6146100b257806374adcf2e146100bc575b600080fd5b6100956100903660046103f3565b610120565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ba61014a565b005b6001546100c69081565b6040519081526020016100a9565b6000546001600160a01b0316610095565b6100ed610189565b6040516100a9919061040c565b6100ba6101083660046103c3565b6101eb565b6100ba61011b3660046103c3565b6102c2565b6002818154811061013057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461017d5760405162461bcd60e51b815260040161017490610459565b60405180910390fd5b6101876000610366565b565b606060028054806020026020016040519081016040528092919081815260200182805480156101e157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c3575b5050505050905090565b6000546001600160a01b031633146102155760405162461bcd60e51b815260040161017490610459565b60008161022a6000546001600160a01b031690565b604051610236906103b6565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610269573d6000803e3d6000fd5b5060028054600180820183556000929092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b03841617905580548101905590505050565b6000546001600160a01b031633146102ec5760405162461bcd60e51b815260040161017490610459565b6001600160a01b0381166103515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610174565b61035a81610366565b50565b80546001019055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611a0b8061048f83390190565b6000602082840312156103d557600080fd5b81356001600160a01b03811681146103ec57600080fd5b9392505050565b60006020828403121561040557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561044d5783516001600160a01b031683529284019291840191600101610428565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe60806040523480156200001157600080fd5b5060405162001a0b38038062001a0b833981016040819052620000349162000083565b600180546001600160a01b039384166001600160a01b03199182161790915560068054929093169116179055620000bb565b80516001600160a01b03811681146200007e57600080fd5b919050565b600080604083850312156200009757600080fd5b620000a28362000066565b9150620000b26020840162000066565b90509250929050565b61194080620000cb6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638e52f97b116100715780638e52f97b14610166578063a03e31d114610187578063b68feb84146101c0578063ca77ab65146101d3578063f30b5069146101db578063fc0c546a146101ee57600080fd5b806309e69ede146100ae5780634572bc88146100f25780635a9b0b891461010a57806366088687146101265780638da5cb5b1461013b575b600080fd5b6100d86100bc366004611431565b6002602052600090815260409020805460019091015460ff1682565b604080519283529015156020830152015b60405180910390f35b6000546100fc9081565b6040519081526020016100e9565b610112610201565b6040516100e99897969594939291906116c8565b61013961013436600461144c565b610706565b005b60065461014e906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b61017961017436600461156c565b6109d8565b6040516100e992919061165a565b61019a61019536600461156c565b610a87565b604080516001600160a01b039485168152939092166020840152908201526060016100e9565b6101396101ce366004611488565b610ac7565b610139610c65565b61019a6101e936600461156c565b611077565b60015461014e906001600160a01b031681565b600080606080606080606080600061021860005490565b67ffffffffffffffff811115610230576102306118f4565b604051908082528060200260200182016040528015610259578160200160208202803683370190505b509050600061026760005490565b67ffffffffffffffff81111561027f5761027f6118f4565b6040519080825280602002602001820160405280156102b257816020015b606081526020019060019003908161029d5790505b50905060006102c060005490565b67ffffffffffffffff8111156102d8576102d86118f4565b604051908082528060200260200182016040528015610301578160200160208202803683370190505b50905060005b6000548110156104cd5760008181526003602052604090205484516001600160a01b0390911690859083908110610340576103406118de565b6001600160a01b039092166020928302919091018201526000828152600390915260409020600101805461037390611855565b80601f016020809104026020016040519081016040528092919081815260200182805461039f90611855565b80156103ec5780601f106103c1576101008083540402835291602001916103ec565b820191906000526020600020905b8154815290600101906020018083116103cf57829003601f168201915b5050505050838281518110610403576104036118de565b602090810291909101810191909152600154600083815260039092526040918290205491516370a0823160e01b81526001600160a01b0392831660048201529116906370a082319060240160206040518083038186803b15801561046657600080fd5b505afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190611585565b8282815181106104b0576104b06118de565b6020908102919091010152806104c581611890565b915050610307565b5060045460009067ffffffffffffffff8111156104ec576104ec6118f4565b604051908082528060200260200182016040528015610515578160200160208202803683370190505b5060045490915060009067ffffffffffffffff811115610537576105376118f4565b604051908082528060200260200182016040528015610560578160200160208202803683370190505b5060045490915060009067ffffffffffffffff811115610582576105826118f4565b6040519080825280602002602001820160405280156105ab578160200160208202803683370190505b50905060005b6004548110156106dd57600481815481106105ce576105ce6118de565b600091825260209091206003909102015484516001600160a01b03909116908590839081106105ff576105ff6118de565b60200260200101906001600160a01b031690816001600160a01b03168152505060048181548110610632576106326118de565b906000526020600020906003020160010160009054906101000a90046001600160a01b0316838281518110610669576106696118de565b60200260200101906001600160a01b031690816001600160a01b0316815250506004818154811061069c5761069c6118de565b9060005260206000209060030201600201548282815181106106c0576106c06118de565b6020908102919091010152806106d581611890565b9150506105b1565b50600054600154909f6001600160a01b039091169e50959c50939a509198509650945092509050565b6006546001600160a01b031633146107395760405162461bcd60e51b815260040161073090611686565b60405180910390fd5b6001600160a01b03831660009081526002602052604090206001015460ff16801561077f57506001600160a01b03821660009081526002602052604090206001015460ff165b6107d95760405162461bcd60e51b815260206004820152602560248201527f4f6e65206f72206d6f7265207061727469636970616e7473206172656e277420604482015264185919195960da1b6064820152608401610730565b6001546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a082319060240160206040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190611585565b8113156108c45760405162461bcd60e51b815260206004820152603660248201527f4572726f723a20446562746f722062616c616e63652073686f756c642062652060448201527519dc99585d195c881d1a185b881a1a5cc81919589a5d60521b6064820152608401610730565b604080516060810182526001600160a01b038086168083528582166020840181815284860187815260048054600181018255600091909152865160039091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180549288166001600160a01b031993841617905592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c840180549190971691161790945592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d909301929092559251919290917fbd1101f01e5043b442d7312228b63cae3ef6a1488a210f0b9c13887077c8b508906109ca9086815260200190565b60405180910390a350505050565b600360205260009081526040902080546001820180546001600160a01b039092169291610a0490611855565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3090611855565b8015610a7d5780601f10610a5257610100808354040283529160200191610a7d565b820191906000526020600020905b815481529060010190602001808311610a6057829003601f168201915b5050505050905082565b60048181548110610a9757600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03918216935091169083565b6006546001600160a01b03163314610af15760405162461bcd60e51b815260040161073090611686565b6001600160a01b03821660009081526002602052604090206001015460ff1615610b6f5760405162461bcd60e51b815260206004820152602960248201527f457870656e7365547261636b65723a205041525449434950414e545f414c524560448201526810511657d05111115160ba1b6064820152608401610730565b6040518060400160405280610b8360005490565b8152600160209182018190526001600160a01b0385811660008181526002855260408082208751815596860151968501805460ff191697151597909717909655855180870187529182528185018781528154825260038652959020815181546001600160a01b03191693169290921782559351805185949293610c0b9390850192019061137c565b50506000805460010190555081604051610c25919061163e565b604051908190038120906001600160a01b038516907f54d9fcf3da31043daf69e0a8ad35eaf7cfae552733f792dc3d95805eb45bfec290600090a3505050565b6006546001600160a01b03163314610c8f5760405162461bcd60e51b815260040161073090611686565b6000805467ffffffffffffffff811115610cab57610cab6118f4565b604051908082528060200260200182016040528015610cd4578160200160208202803683370190505b50905060005b600054811015610d15576000828281518110610cf857610cf86118de565b602090810291909101015280610d0d81611890565b915050610cda565b5060005b600454811015610e565760048181548110610d3657610d366118de565b906000526020600020906003020160020154826002600060048581548110610d6057610d606118de565b600091825260208083206003909202909101546001600160a01b0316835282019290925260400190205481518110610d9a57610d9a6118de565b60200260200101818151610dae91906117e6565b9052506004805482908110610dc557610dc56118de565b906000526020600020906003020160020154826002600060048581548110610def57610def6118de565b60009182526020808320600160039093020191909101546001600160a01b0316835282019290925260400190205481518110610e2d57610e2d6118de565b60200260200101818151610e4191906117a5565b90525080610e4e81611890565b915050610d19565b506000805b610e6483611087565b9150610e6f836110eb565b90506000610eb8848481518110610e8857610e886118de565b6020026020010151858481518110610ea257610ea26118de565b6020026020010151610eb3906118ab565b611149565b905080848481518110610ecd57610ecd6118de565b60200260200101818151610ee191906117e6565b90525083518190859084908110610efa57610efa6118de565b60200260200101818151610f0e91906117a5565b90525060408051606081018252600084815260036020818152848320546001600160a01b039081168552888452828252858420548116918501918252948401958652600580546001810182559352925191027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180549285166001600160a01b031993841617905591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1830180549190941691161790915590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2909101558251839083908110611003576110036118de565b602002602001015160001415806110345750828181518110611027576110276118de565b6020026020010151600014155b610e5b57611040611161565b61104957600080fd5b6040517fc8f9da615631f09888fe5c6596c3fafaa6608feaf329f75a5d92bdab1b6438b290600090a1505050565b60058181548110610a9757600080fd5b600080805b83518110156110e4578382815181106110a7576110a76118de565b60200260200101518482815181106110c1576110c16118de565b6020026020010151126110d2578091505b806110dc81611890565b91505061108c565b5092915050565b600080805b83518110156110e45783828151811061110b5761110b6118de565b6020026020010151848281518110611125576111256118de565b60200260200101511215611137578091505b8061114181611890565b9150506110f0565b6000818312611158578161115a565b825b9392505050565b6000805b60055481101561137457600154600580546001600160a01b03909216916323b872dd919084908110611199576111996118de565b6000918252602090912060039091020154600580546001600160a01b0390921691859081106111ca576111ca6118de565b906000526020600020906003020160010160009054906101000a90046001600160a01b031660058581548110611202576112026118de565b60009182526020909120600260039092020101546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561126557600080fd5b505af1158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d919061154a565b50600581815481106112b1576112b16118de565b6000918252602090912060016003909202010154600580546001600160a01b0390921691839081106112e5576112e56118de565b6000918252602090912060039091020154600580546001600160a01b03909216917f7db7852b30fc413c4a90995f03d9f21e64c45d0ddc8324a8ce4c730a051cbf82919085908110611339576113396118de565b90600052602060002090600302016002015460405161135a91815260200190565b60405180910390a38061136c81611890565b915050611165565b506001905090565b82805461138890611855565b90600052602060002090601f0160209004810192826113aa57600085556113f0565b82601f106113c357805160ff19168380011785556113f0565b828001600101855582156113f0579182015b828111156113f05782518255916020019190600101906113d5565b506113fc929150611400565b5090565b5b808211156113fc5760008155600101611401565b80356001600160a01b038116811461142c57600080fd5b919050565b60006020828403121561144357600080fd5b61115a82611415565b60008060006060848603121561146157600080fd5b61146a84611415565b925061147860208501611415565b9150604084013590509250925092565b6000806040838503121561149b57600080fd5b6114a483611415565b9150602083013567ffffffffffffffff808211156114c157600080fd5b818501915085601f8301126114d557600080fd5b8135818111156114e7576114e76118f4565b604051601f8201601f19908116603f0116810190838211818310171561150f5761150f6118f4565b8160405282815288602084870101111561152857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561155c57600080fd5b8151801515811461115a57600080fd5b60006020828403121561157e57600080fd5b5035919050565b60006020828403121561159757600080fd5b5051919050565b600081518084526020808501945080840160005b838110156115d75781516001600160a01b0316875295820195908201906001016115b2565b509495945050505050565b600081518084526020808501945080840160005b838110156115d7578151875295820195908201906001016115f6565b6000815180845261162a816020860160208601611825565b601f01601f19169290920160200192915050565b60008251611650818460208701611825565b9190910192915050565b6001600160a01b038316815260406020820181905260009061167e90830184611612565b949350505050565b60208082526022908201527f457870656e7365547261636b65723a20414354494f4e5f4e4f545f414c4c4f57604082015261115160f21b606082015260800190565b60006101008a8352602060018060a01b038b16818501528160408501526116f18285018b61159e565b915083820360608501528189518084528284019150828160051b850101838c0160005b8381101561174257601f19878403018552611730838351611612565b94860194925090850190600101611714565b50508681036080880152611756818c6115e2565b94505050505082810360a084015261176e818761159e565b905082810360c0840152611782818661159e565b905082810360e084015261179681856115e2565b9b9a5050505050505050505050565b600080821280156001600160ff1b03849003851316156117c7576117c76118c8565b600160ff1b83900384128116156117e0576117e06118c8565b50500190565b60008083128015600160ff1b850184121615611804576118046118c8565b6001600160ff1b038401831381161561181f5761181f6118c8565b50500390565b60005b83811015611840578181015183820152602001611828565b8381111561184f576000848401525b50505050565b600181811c9082168061186957607f821691505b6020821081141561188a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118a4576118a46118c8565b5060010190565b6000600160ff1b8214156118c1576118c16118c8565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122030fc683a1844849aa6cd0b340f825e4be71788c9fca2ba0db84bf787e7c8628a64736f6c63430008070033a26469706673582212207c5932750f786d0fac95f4b301b0b00da8a46dfcbdf28eb506adfc1368f28f8364736f6c6343000807003360806040523480156200001157600080fd5b5060405162001a0b38038062001a0b833981016040819052620000349162000083565b600180546001600160a01b039384166001600160a01b03199182161790915560068054929093169116179055620000bb565b80516001600160a01b03811681146200007e57600080fd5b919050565b600080604083850312156200009757600080fd5b620000a28362000066565b9150620000b26020840162000066565b90509250929050565b61194080620000cb6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638e52f97b116100715780638e52f97b14610166578063a03e31d114610187578063b68feb84146101c0578063ca77ab65146101d3578063f30b5069146101db578063fc0c546a146101ee57600080fd5b806309e69ede146100ae5780634572bc88146100f25780635a9b0b891461010a57806366088687146101265780638da5cb5b1461013b575b600080fd5b6100d86100bc366004611431565b6002602052600090815260409020805460019091015460ff1682565b604080519283529015156020830152015b60405180910390f35b6000546100fc9081565b6040519081526020016100e9565b610112610201565b6040516100e99897969594939291906116c8565b61013961013436600461144c565b610706565b005b60065461014e906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b61017961017436600461156c565b6109d8565b6040516100e992919061165a565b61019a61019536600461156c565b610a87565b604080516001600160a01b039485168152939092166020840152908201526060016100e9565b6101396101ce366004611488565b610ac7565b610139610c65565b61019a6101e936600461156c565b611077565b60015461014e906001600160a01b031681565b600080606080606080606080600061021860005490565b67ffffffffffffffff811115610230576102306118f4565b604051908082528060200260200182016040528015610259578160200160208202803683370190505b509050600061026760005490565b67ffffffffffffffff81111561027f5761027f6118f4565b6040519080825280602002602001820160405280156102b257816020015b606081526020019060019003908161029d5790505b50905060006102c060005490565b67ffffffffffffffff8111156102d8576102d86118f4565b604051908082528060200260200182016040528015610301578160200160208202803683370190505b50905060005b6000548110156104cd5760008181526003602052604090205484516001600160a01b0390911690859083908110610340576103406118de565b6001600160a01b039092166020928302919091018201526000828152600390915260409020600101805461037390611855565b80601f016020809104026020016040519081016040528092919081815260200182805461039f90611855565b80156103ec5780601f106103c1576101008083540402835291602001916103ec565b820191906000526020600020905b8154815290600101906020018083116103cf57829003601f168201915b5050505050838281518110610403576104036118de565b602090810291909101810191909152600154600083815260039092526040918290205491516370a0823160e01b81526001600160a01b0392831660048201529116906370a082319060240160206040518083038186803b15801561046657600080fd5b505afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190611585565b8282815181106104b0576104b06118de565b6020908102919091010152806104c581611890565b915050610307565b5060045460009067ffffffffffffffff8111156104ec576104ec6118f4565b604051908082528060200260200182016040528015610515578160200160208202803683370190505b5060045490915060009067ffffffffffffffff811115610537576105376118f4565b604051908082528060200260200182016040528015610560578160200160208202803683370190505b5060045490915060009067ffffffffffffffff811115610582576105826118f4565b6040519080825280602002602001820160405280156105ab578160200160208202803683370190505b50905060005b6004548110156106dd57600481815481106105ce576105ce6118de565b600091825260209091206003909102015484516001600160a01b03909116908590839081106105ff576105ff6118de565b60200260200101906001600160a01b031690816001600160a01b03168152505060048181548110610632576106326118de565b906000526020600020906003020160010160009054906101000a90046001600160a01b0316838281518110610669576106696118de565b60200260200101906001600160a01b031690816001600160a01b0316815250506004818154811061069c5761069c6118de565b9060005260206000209060030201600201548282815181106106c0576106c06118de565b6020908102919091010152806106d581611890565b9150506105b1565b50600054600154909f6001600160a01b039091169e50959c50939a509198509650945092509050565b6006546001600160a01b031633146107395760405162461bcd60e51b815260040161073090611686565b60405180910390fd5b6001600160a01b03831660009081526002602052604090206001015460ff16801561077f57506001600160a01b03821660009081526002602052604090206001015460ff165b6107d95760405162461bcd60e51b815260206004820152602560248201527f4f6e65206f72206d6f7265207061727469636970616e7473206172656e277420604482015264185919195960da1b6064820152608401610730565b6001546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a082319060240160206040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190611585565b8113156108c45760405162461bcd60e51b815260206004820152603660248201527f4572726f723a20446562746f722062616c616e63652073686f756c642062652060448201527519dc99585d195c881d1a185b881a1a5cc81919589a5d60521b6064820152608401610730565b604080516060810182526001600160a01b038086168083528582166020840181815284860187815260048054600181018255600091909152865160039091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180549288166001600160a01b031993841617905592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c840180549190971691161790945592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d909301929092559251919290917fbd1101f01e5043b442d7312228b63cae3ef6a1488a210f0b9c13887077c8b508906109ca9086815260200190565b60405180910390a350505050565b600360205260009081526040902080546001820180546001600160a01b039092169291610a0490611855565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3090611855565b8015610a7d5780601f10610a5257610100808354040283529160200191610a7d565b820191906000526020600020905b815481529060010190602001808311610a6057829003601f168201915b5050505050905082565b60048181548110610a9757600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03918216935091169083565b6006546001600160a01b03163314610af15760405162461bcd60e51b815260040161073090611686565b6001600160a01b03821660009081526002602052604090206001015460ff1615610b6f5760405162461bcd60e51b815260206004820152602960248201527f457870656e7365547261636b65723a205041525449434950414e545f414c524560448201526810511657d05111115160ba1b6064820152608401610730565b6040518060400160405280610b8360005490565b8152600160209182018190526001600160a01b0385811660008181526002855260408082208751815596860151968501805460ff191697151597909717909655855180870187529182528185018781528154825260038652959020815181546001600160a01b03191693169290921782559351805185949293610c0b9390850192019061137c565b50506000805460010190555081604051610c25919061163e565b604051908190038120906001600160a01b038516907f54d9fcf3da31043daf69e0a8ad35eaf7cfae552733f792dc3d95805eb45bfec290600090a3505050565b6006546001600160a01b03163314610c8f5760405162461bcd60e51b815260040161073090611686565b6000805467ffffffffffffffff811115610cab57610cab6118f4565b604051908082528060200260200182016040528015610cd4578160200160208202803683370190505b50905060005b600054811015610d15576000828281518110610cf857610cf86118de565b602090810291909101015280610d0d81611890565b915050610cda565b5060005b600454811015610e565760048181548110610d3657610d366118de565b906000526020600020906003020160020154826002600060048581548110610d6057610d606118de565b600091825260208083206003909202909101546001600160a01b0316835282019290925260400190205481518110610d9a57610d9a6118de565b60200260200101818151610dae91906117e6565b9052506004805482908110610dc557610dc56118de565b906000526020600020906003020160020154826002600060048581548110610def57610def6118de565b60009182526020808320600160039093020191909101546001600160a01b0316835282019290925260400190205481518110610e2d57610e2d6118de565b60200260200101818151610e4191906117a5565b90525080610e4e81611890565b915050610d19565b506000805b610e6483611087565b9150610e6f836110eb565b90506000610eb8848481518110610e8857610e886118de565b6020026020010151858481518110610ea257610ea26118de565b6020026020010151610eb3906118ab565b611149565b905080848481518110610ecd57610ecd6118de565b60200260200101818151610ee191906117e6565b90525083518190859084908110610efa57610efa6118de565b60200260200101818151610f0e91906117a5565b90525060408051606081018252600084815260036020818152848320546001600160a01b039081168552888452828252858420548116918501918252948401958652600580546001810182559352925191027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180549285166001600160a01b031993841617905591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1830180549190941691161790915590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2909101558251839083908110611003576110036118de565b602002602001015160001415806110345750828181518110611027576110276118de565b6020026020010151600014155b610e5b57611040611161565b61104957600080fd5b6040517fc8f9da615631f09888fe5c6596c3fafaa6608feaf329f75a5d92bdab1b6438b290600090a1505050565b60058181548110610a9757600080fd5b600080805b83518110156110e4578382815181106110a7576110a76118de565b60200260200101518482815181106110c1576110c16118de565b6020026020010151126110d2578091505b806110dc81611890565b91505061108c565b5092915050565b600080805b83518110156110e45783828151811061110b5761110b6118de565b6020026020010151848281518110611125576111256118de565b60200260200101511215611137578091505b8061114181611890565b9150506110f0565b6000818312611158578161115a565b825b9392505050565b6000805b60055481101561137457600154600580546001600160a01b03909216916323b872dd919084908110611199576111996118de565b6000918252602090912060039091020154600580546001600160a01b0390921691859081106111ca576111ca6118de565b906000526020600020906003020160010160009054906101000a90046001600160a01b031660058581548110611202576112026118de565b60009182526020909120600260039092020101546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561126557600080fd5b505af1158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d919061154a565b50600581815481106112b1576112b16118de565b6000918252602090912060016003909202010154600580546001600160a01b0390921691839081106112e5576112e56118de565b6000918252602090912060039091020154600580546001600160a01b03909216917f7db7852b30fc413c4a90995f03d9f21e64c45d0ddc8324a8ce4c730a051cbf82919085908110611339576113396118de565b90600052602060002090600302016002015460405161135a91815260200190565b60405180910390a38061136c81611890565b915050611165565b506001905090565b82805461138890611855565b90600052602060002090601f0160209004810192826113aa57600085556113f0565b82601f106113c357805160ff19168380011785556113f0565b828001600101855582156113f0579182015b828111156113f05782518255916020019190600101906113d5565b506113fc929150611400565b5090565b5b808211156113fc5760008155600101611401565b80356001600160a01b038116811461142c57600080fd5b919050565b60006020828403121561144357600080fd5b61115a82611415565b60008060006060848603121561146157600080fd5b61146a84611415565b925061147860208501611415565b9150604084013590509250925092565b6000806040838503121561149b57600080fd5b6114a483611415565b9150602083013567ffffffffffffffff808211156114c157600080fd5b818501915085601f8301126114d557600080fd5b8135818111156114e7576114e76118f4565b604051601f8201601f19908116603f0116810190838211818310171561150f5761150f6118f4565b8160405282815288602084870101111561152857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561155c57600080fd5b8151801515811461115a57600080fd5b60006020828403121561157e57600080fd5b5035919050565b60006020828403121561159757600080fd5b5051919050565b600081518084526020808501945080840160005b838110156115d75781516001600160a01b0316875295820195908201906001016115b2565b509495945050505050565b600081518084526020808501945080840160005b838110156115d7578151875295820195908201906001016115f6565b6000815180845261162a816020860160208601611825565b601f01601f19169290920160200192915050565b60008251611650818460208701611825565b9190910192915050565b6001600160a01b038316815260406020820181905260009061167e90830184611612565b949350505050565b60208082526022908201527f457870656e7365547261636b65723a20414354494f4e5f4e4f545f414c4c4f57604082015261115160f21b606082015260800190565b60006101008a8352602060018060a01b038b16818501528160408501526116f18285018b61159e565b915083820360608501528189518084528284019150828160051b850101838c0160005b8381101561174257601f19878403018552611730838351611612565b94860194925090850190600101611714565b50508681036080880152611756818c6115e2565b94505050505082810360a084015261176e818761159e565b905082810360c0840152611782818661159e565b905082810360e084015261179681856115e2565b9b9a5050505050505050505050565b600080821280156001600160ff1b03849003851316156117c7576117c76118c8565b600160ff1b83900384128116156117e0576117e06118c8565b50500190565b60008083128015600160ff1b850184121615611804576118046118c8565b6001600160ff1b038401831381161561181f5761181f6118c8565b50500390565b60005b83811015611840578181015183820152602001611828565b8381111561184f576000848401525b50505050565b600181811c9082168061186957607f821691505b6020821081141561188a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118a4576118a46118c8565b5060010190565b6000600160ff1b8214156118c1576118c16118c8565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122030fc683a1844849aa6cd0b340f825e4be71788c9fca2ba0db84bf787e7c8628a64736f6c63430008070033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:615:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:9",
                "type": ""
              }
            ],
            "src": "14:290:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "438:175:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "448:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "460:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "471:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "456:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "448:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "483:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "501:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "506:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "510:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "487:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "551:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "575:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "586:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "571:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "571:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "595:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "603:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "564:43:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "399:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "410:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "418:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "429:4:9",
                "type": ""
              }
            ],
            "src": "309:304:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2617:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:9",
                "type": ""
              }
            ],
            "src": "14:286:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "375:110:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "396:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "405:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "392:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "417:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "388:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "388:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "385:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "446:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "469:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "341:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "352:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "364:6:9",
                "type": ""
              }
            ],
            "src": "305:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "591:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "601:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "609:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "601:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "643:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "658:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "674:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "679:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "670:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "670:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "683:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "666:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "666:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "636:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "636:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "636:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "560:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "571:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "582:4:9",
                "type": ""
              }
            ],
            "src": "490:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "827:175:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "837:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "849:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "860:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "845:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "837:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "872:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "890:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "895:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "886:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "886:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "899:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "882:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "876:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "917:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "932:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "940:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "928:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "910:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "964:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "975:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "960:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "960:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "984:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "992:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "980:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "980:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "953:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "953:43:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "788:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "799:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "807:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "818:4:9",
                "type": ""
              }
            ],
            "src": "698:304:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1158:507:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1168:12:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1178:2:9",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1172:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1189:32:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1207:9:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1218:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1203:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1203:18:9"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "1193:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1237:9:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1248:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1230:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1230:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1230:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1260:17:9",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "1271:6:9"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1264:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1286:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1306:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1300:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1300:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1290:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "1329:6:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1322:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1322:22:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1353:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1364:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1375:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1353:3:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1387:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1405:6:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1413:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1401:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1401:15:9"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1391:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1425:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1434:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1429:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1493:146:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1514:3:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1529:6:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1523:5:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1523:13:9"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1546:3:9",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1551:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "1542:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1542:11:9"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1555:1:9",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1538:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1538:19:9"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1519:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1519:39:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1507:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1507:52:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1507:52:9"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1572:19:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1583:3:9"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1588:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1579:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1579:12:9"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1572:3:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1604:25:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1618:6:9"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1626:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1614:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1614:15:9"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1604:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1455:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1458:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1452:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1466:18:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1468:14:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1477:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1480:1:9",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1473:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1473:9:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1468:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1448:3:9",
                    "statements": []
                  },
                  "src": "1444:195:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1648:11:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1656:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1648:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1127:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1138:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1149:4:9",
                "type": ""
              }
            ],
            "src": "1007:658:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1844:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1861:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1854:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1854:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1854:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1911:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1934:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1945:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1930:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1930:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1950:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1923:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1923:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1923:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2005:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2016:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2001:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:18:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2021:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1994:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1994:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2039:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2051:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2062:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2047:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2047:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2039:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1821:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1835:4:9",
                "type": ""
              }
            ],
            "src": "1670:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2251:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2268:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2279:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2261:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2261:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2302:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2313:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2298:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2298:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2318:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2291:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2291:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2341:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2352:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2337:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2337:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2357:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2330:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2330:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2330:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2401:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2413:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2409:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2401:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2228:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2242:4:9",
                "type": ""
              }
            ],
            "src": "2077:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2539:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2549:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2561:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2572:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2557:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2549:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2591:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2602:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2584:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2584:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2508:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2519:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2530:4:9",
                "type": ""
              }
            ],
            "src": "2438:177:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "196:660:7:-:0;;;341:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;381:29:7;432:12;446:7;1082::0;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85;446:7:7;413:41;;;;;:::i;:::-;-1:-1:-1;;;;;539:15:9;;;521:34;;591:15;;586:2;571:18;;564:43;471:2;456:18;413:41:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;460:8:7;:38;;;;;;;;-1:-1:-1;460:38:7;;;;;;;;-1:-1:-1;;;;;;460:38:7;-1:-1:-1;;;;;460:38:7;;;;;;;-1:-1:-1;504:26:7;;:24;460:38;504:24;;;;;:26;;:::i;:::-;375:160;341:194;196:660;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;945:123:5:-;1032:19;;1050:1;1032:19;;;945:123::o;196:660:7:-;;;;;;;;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;309:304::-;196:660:7;;;;;;",
  "deployedSourceMap": "196:660:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:25;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;654:32:9;;;636:51;;624:2;609:18;311:25:7;;;;;;;;1668:101:0;;;:::i;:::-;;268:38:7;;;;;;;;;;2584:25:9;;;2572:2;2557:18;268:38:7;2438:177:9;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;764:90:7;;;:::i;:::-;;;;;;;:::i;539:221::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;311:25:7:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;311:25:7;;-1:-1:-1;311:25:7;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;764:90:7:-;810:16;841:8;834:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;834:15:7;;;;;;;;;;;;;;;;;;;;;;;764:90;:::o;539:221::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;606:29:7::1;657:12;671:7;1082::0::0;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85;671:7:7::1;638:41;;;;;:::i;:::-;-1:-1:-1::0;;;;;928:15:9;;;910:34;;980:15;;975:2;960:18;;953:43;860:2;845:18;638:41:7::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;685:8:7::1;:38:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;685:38:7;;;;;::::1;::::0;;-1:-1:-1;;;;;;685:38:7::1;-1:-1:-1::0;;;;;685:38:7;::::1;;::::0;;1032:19:5;;;;;;685:38:7;-1:-1:-1;600:160:7::1;539:221:::0;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;1872:2:9;1998:73:0::1;::::0;::::1;1854:21:9::0;1911:2;1891:18;;;1884:30;1950:34;1930:18;;;1923:62;-1:-1:-1;;;2001:18:9;;;1994:36;2047:19;;1998:73:0::1;1670:402:9::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;945:123:5:-;1032:19;;1050:1;1032:19;;;945:123::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:286:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:9;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:9:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:9;;305:180;-1:-1:-1;305:180:9:o;1007:658::-;1178:2;1230:21;;;1300:13;;1203:18;;;1322:22;;;1149:4;;1178:2;1401:15;;;;1375:2;1360:18;;;1149:4;1444:195;1458:6;1455:1;1452:13;1444:195;;;1523:13;;-1:-1:-1;;;;;1519:39:9;1507:52;;1614:15;;;;1579:12;;;;1555:1;1473:9;1444:195;;;-1:-1:-1;1656:3:9;;1007:658;-1:-1:-1;;;;;;1007:658:9:o;2077:356::-;2279:2;2261:21;;;2298:18;;;2291:30;2357:34;2352:2;2337:18;;2330:62;2424:2;2409:18;;2077:356::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\nimport \"./ExpenseTracker.sol\";\n\ncontract Factory is Ownable {\n  using Counters for Counters.Counter;\n\n  Counters.Counter public trackerCounter;\n\n  address[] public trackers;\n\n  constructor(address tokenAddress) {\n    ExpenseTracker expenseTracker = new ExpenseTracker(tokenAddress, owner());\n    trackers.push(address(expenseTracker));\n    trackerCounter.increment();\n  }\n\n  function addTracker(address tokenAddress) external onlyOwner {\n    ExpenseTracker expenseTracker = new ExpenseTracker(tokenAddress, owner());\n    trackers.push(address(expenseTracker));\n    trackerCounter.increment();\n  }\n\n  function getTrackers() external view returns (address[] memory) {\n    return trackers;\n  }\n}\n",
  "sourcePath": "/Users/niccolofant/Desktop/assignment/core/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        775
      ],
      "Counters": [
        849
      ],
      "ERC20": [
        650
      ],
      "ExpenseTracker": [
        1593
      ],
      "Factory": [
        1684
      ],
      "IERC20": [
        728
      ],
      "IERC20Metadata": [
        753
      ],
      "Ownable": [
        104
      ],
      "TOK": [
        1716
      ]
    },
    "id": 1685,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1595,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1596,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1685,
        "sourceUnit": 105,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1597,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1685,
        "sourceUnit": 850,
        "src": "110:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ExpenseTracker.sol",
        "file": "./ExpenseTracker.sol",
        "id": 1598,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1685,
        "sourceUnit": 1594,
        "src": "164:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1599,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "216:7:7"
            },
            "id": 1600,
            "nodeType": "InheritanceSpecifier",
            "src": "216:7:7"
          }
        ],
        "contractDependencies": [
          1593
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1684,
        "linearizedBaseContracts": [
          1684,
          104,
          775
        ],
        "name": "Factory",
        "nameLocation": "205:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1604,
            "libraryName": {
              "id": 1601,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 849,
              "src": "234:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "228:36:7",
            "typeName": {
              "id": 1603,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1602,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 781,
                "src": "247:16:7"
              },
              "referencedDeclaration": 781,
              "src": "247:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$781_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "74adcf2e",
            "id": 1607,
            "mutability": "mutable",
            "name": "trackerCounter",
            "nameLocation": "292:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1684,
            "src": "268:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$781_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1606,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1605,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 781,
                "src": "268:16:7"
              },
              "referencedDeclaration": 781,
              "src": "268:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$781_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16d6bca4",
            "id": 1610,
            "mutability": "mutable",
            "name": "trackers",
            "nameLocation": "328:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1684,
            "src": "311:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1608,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1609,
              "nodeType": "ArrayTypeName",
              "src": "311:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "375:160:7",
              "statements": [
                {
                  "assignments": [
                    1617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1617,
                      "mutability": "mutable",
                      "name": "expenseTracker",
                      "nameLocation": "396:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1640,
                      "src": "381:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                        "typeString": "contract ExpenseTracker"
                      },
                      "typeName": {
                        "id": 1616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1615,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "381:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "381:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1621,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "432:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1622,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "446:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "446:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "413:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_ExpenseTracker_$1593_$",
                        "typeString": "function (address,address) returns (contract ExpenseTracker)"
                      },
                      "typeName": {
                        "id": 1619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1618,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "417:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "417:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      }
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "413:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                      "typeString": "contract ExpenseTracker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "381:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1631,
                            "name": "expenseTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1617,
                            "src": "482:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          ],
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "474:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "474:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "474:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1626,
                        "name": "trackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "460:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "460:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "460:38:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1635,
                        "name": "trackerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "504:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$781_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "504:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$781_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$781_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "504:26:7"
                }
              ]
            },
            "id": 1641,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1612,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "361:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "353:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:22:7"
            },
            "returnParameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:7"
            },
            "scope": 1684,
            "src": "341:194:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1673,
              "nodeType": "Block",
              "src": "600:160:7",
              "statements": [
                {
                  "assignments": [
                    1650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1650,
                      "mutability": "mutable",
                      "name": "expenseTracker",
                      "nameLocation": "621:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1673,
                      "src": "606:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                        "typeString": "contract ExpenseTracker"
                      },
                      "typeName": {
                        "id": 1649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1648,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "606:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "606:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1658,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1654,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "657:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1655,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "671:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "671:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "638:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_ExpenseTracker_$1593_$",
                        "typeString": "function (address,address) returns (contract ExpenseTracker)"
                      },
                      "typeName": {
                        "id": 1652,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1651,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "642:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "642:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                      "typeString": "contract ExpenseTracker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "606:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1664,
                            "name": "expenseTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1650,
                            "src": "707:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          ],
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "699:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "699:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1659,
                        "name": "trackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "685:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "685:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "685:38:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1668,
                        "name": "trackerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "729:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$781_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "729:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$781_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$781_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "729:26:7"
                }
              ]
            },
            "functionSelector": "f1362ffd",
            "id": 1674,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1645,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "590:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "590:9:7"
              }
            ],
            "name": "addTracker",
            "nameLocation": "548:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1643,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "567:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "559:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:22:7"
            },
            "returnParameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:7"
            },
            "scope": 1684,
            "src": "539:221:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1682,
              "nodeType": "Block",
              "src": "828:26:7",
              "statements": [
                {
                  "expression": {
                    "id": 1680,
                    "name": "trackers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1610,
                    "src": "841:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1679,
                  "id": 1681,
                  "nodeType": "Return",
                  "src": "834:15:7"
                }
              ]
            },
            "functionSelector": "d57b803c",
            "id": 1683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrackers",
            "nameLocation": "773:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:2:7"
            },
            "returnParameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1683,
                  "src": "810:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1676,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "810:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1677,
                    "nodeType": "ArrayTypeName",
                    "src": "810:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:18:7"
            },
            "scope": 1684,
            "src": "764:90:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1685,
        "src": "196:660:7",
        "usedErrors": []
      }
    ],
    "src": "32:825:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        775
      ],
      "Counters": [
        849
      ],
      "ERC20": [
        650
      ],
      "ExpenseTracker": [
        1593
      ],
      "Factory": [
        1684
      ],
      "IERC20": [
        728
      ],
      "IERC20Metadata": [
        753
      ],
      "Ownable": [
        104
      ],
      "TOK": [
        1716
      ]
    },
    "id": 1685,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1595,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1596,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1685,
        "sourceUnit": 105,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1597,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1685,
        "sourceUnit": 850,
        "src": "110:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ExpenseTracker.sol",
        "file": "./ExpenseTracker.sol",
        "id": 1598,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1685,
        "sourceUnit": 1594,
        "src": "164:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1599,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "216:7:7"
            },
            "id": 1600,
            "nodeType": "InheritanceSpecifier",
            "src": "216:7:7"
          }
        ],
        "contractDependencies": [
          1593
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1684,
        "linearizedBaseContracts": [
          1684,
          104,
          775
        ],
        "name": "Factory",
        "nameLocation": "205:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1604,
            "libraryName": {
              "id": 1601,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 849,
              "src": "234:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "228:36:7",
            "typeName": {
              "id": 1603,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1602,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 781,
                "src": "247:16:7"
              },
              "referencedDeclaration": 781,
              "src": "247:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$781_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "74adcf2e",
            "id": 1607,
            "mutability": "mutable",
            "name": "trackerCounter",
            "nameLocation": "292:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1684,
            "src": "268:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$781_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1606,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1605,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 781,
                "src": "268:16:7"
              },
              "referencedDeclaration": 781,
              "src": "268:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$781_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16d6bca4",
            "id": 1610,
            "mutability": "mutable",
            "name": "trackers",
            "nameLocation": "328:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1684,
            "src": "311:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1608,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1609,
              "nodeType": "ArrayTypeName",
              "src": "311:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "375:160:7",
              "statements": [
                {
                  "assignments": [
                    1617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1617,
                      "mutability": "mutable",
                      "name": "expenseTracker",
                      "nameLocation": "396:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1640,
                      "src": "381:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                        "typeString": "contract ExpenseTracker"
                      },
                      "typeName": {
                        "id": 1616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1615,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "381:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "381:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1621,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "432:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1622,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "446:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "446:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "413:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_ExpenseTracker_$1593_$",
                        "typeString": "function (address,address) returns (contract ExpenseTracker)"
                      },
                      "typeName": {
                        "id": 1619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1618,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "417:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "417:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      }
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "413:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                      "typeString": "contract ExpenseTracker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "381:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1631,
                            "name": "expenseTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1617,
                            "src": "482:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          ],
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "474:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "474:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "474:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1626,
                        "name": "trackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "460:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "460:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "460:38:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1635,
                        "name": "trackerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "504:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$781_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "504:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$781_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$781_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "504:26:7"
                }
              ]
            },
            "id": 1641,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1612,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "361:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "353:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:22:7"
            },
            "returnParameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:7"
            },
            "scope": 1684,
            "src": "341:194:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1673,
              "nodeType": "Block",
              "src": "600:160:7",
              "statements": [
                {
                  "assignments": [
                    1650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1650,
                      "mutability": "mutable",
                      "name": "expenseTracker",
                      "nameLocation": "621:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1673,
                      "src": "606:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                        "typeString": "contract ExpenseTracker"
                      },
                      "typeName": {
                        "id": 1649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1648,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "606:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "606:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1658,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1654,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "657:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1655,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "671:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "671:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "638:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_ExpenseTracker_$1593_$",
                        "typeString": "function (address,address) returns (contract ExpenseTracker)"
                      },
                      "typeName": {
                        "id": 1652,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1651,
                          "name": "ExpenseTracker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1593,
                          "src": "642:14:7"
                        },
                        "referencedDeclaration": 1593,
                        "src": "642:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                          "typeString": "contract ExpenseTracker"
                        }
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                      "typeString": "contract ExpenseTracker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "606:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1664,
                            "name": "expenseTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1650,
                            "src": "707:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExpenseTracker_$1593",
                              "typeString": "contract ExpenseTracker"
                            }
                          ],
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "699:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "699:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1659,
                        "name": "trackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "685:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "685:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "685:38:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1668,
                        "name": "trackerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "729:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$781_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "729:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$781_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$781_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "729:26:7"
                }
              ]
            },
            "functionSelector": "f1362ffd",
            "id": 1674,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1645,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "590:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "590:9:7"
              }
            ],
            "name": "addTracker",
            "nameLocation": "548:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1643,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "567:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "559:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:22:7"
            },
            "returnParameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:7"
            },
            "scope": 1684,
            "src": "539:221:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1682,
              "nodeType": "Block",
              "src": "828:26:7",
              "statements": [
                {
                  "expression": {
                    "id": 1680,
                    "name": "trackers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1610,
                    "src": "841:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1679,
                  "id": 1681,
                  "nodeType": "Return",
                  "src": "834:15:7"
                }
              ]
            },
            "functionSelector": "d57b803c",
            "id": 1683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrackers",
            "nameLocation": "773:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:2:7"
            },
            "returnParameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1683,
                  "src": "810:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1676,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "810:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1677,
                    "nodeType": "ArrayTypeName",
                    "src": "810:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:18:7"
            },
            "scope": 1684,
            "src": "764:90:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1685,
        "src": "196:660:7",
        "usedErrors": []
      }
    ],
    "src": "32:825:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1b3b44722Da0983F9a472991522215D3f03f47B4",
      "transactionHash": "0x1cd5f2bb7d312a26a1a5ecd2b92d44728d3cdac1f2632cfc6b7070ec8e729efd"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-23T15:18:34.953Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}